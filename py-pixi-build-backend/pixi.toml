[workspace]
authors = ["Nichita Morcotilo <nichita@prefix.dev>"]
channels = ["https://prefix.dev/conda-forge"]
platforms = ["win-64", "linux-64", "osx-64", "osx-arm64"]
license = "BSD-3-Clause"
preview = ["pixi-build"]

[package]
name = "py-pixi-build-backend"
version = "0.1.2"

[package.build.backend]
name = "pixi-build-python"
version = "*"
channels = [
  "https://prefix.dev/pixi-build-backends",
  "https://prefix.dev/conda-forge",
]

[package.build.config]
noarch = false

[package.build-dependencies]
rust = "*"

[package.host-dependencies]
maturin = "*"

[package.run-dependencies]
typing-extensions = "*"

[activation.env]
PIP_REQUIRE_VIRTUALENV = "false"

[feature.build.dependencies]
python = "*"
maturin = "~=1.9.3"
pip = "~=23.3.2"
rust = "~=1.87.0"

[feature.build.target.linux-64.dependencies]
patchelf = "~=0.18.0"

[dependencies]
python = "3.8.*"

# Testing and type checking
mypy = "*"
pytest = "*"
syrupy = "*"
toml = "*"
types-toml = "*"

# Formatting and linting
ruff = ">=0.12.3,<0.13"

[feature.dev.dependencies]
# Development tools (IDE support)
rust-src = "~=1.87.0"

[tasks]
build = "maturin develop"
build-release = "maturin develop --release"

test = { cmd = "pytest --doctest-modules", depends-on = ["build"] }
test-fast = "pytest --doctest-modules"

fmt = { depends-on = ["fmt-python", "fmt-rust"] }
fmt-python = "ruff format pixi_build_backend examples tests"
fmt-rust = "cargo fmt --all"

lint = { depends-on = ["lint-python", "lint-rust"] }
lint-python = "ruff check ."
lint-rust = "cargo clippy --all"

[environments]
# Development environment with all tools (including rust-src for IDE support)  
default = { features = ["build", "dev"], solve-group = "main" }

# Minimal CI environment for automated testing and checks
ci = { features = ["build"], solve-group = "main" }
