[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "py-pixi-build-backend"
description = "Python bindings for pixi-build-backends"
requires-python = ">=3.8"
license = { text = "MIT OR Apache-2.0" }
authors = [{ name = "pixi contributors" }]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Rust",
  "Topic :: Software Development :: Build Tools",
]
keywords = ["build", "conda", "package", "python", "rust"]
dynamic = ["version"]


[project.urls]
Homepage = "https://github.com/prefix-dev/pixi-build-backends"
Repository = "https://github.com/prefix-dev/pixi-build-backends"
"Bug Tracker" = "https://github.com/prefix-dev/pixi-build-backends/issues"

[tool.maturin]
features = ["pyo3/extension-module"]

[tool.ruff]
line-length = 120
target-version = "py38"

[tool.mypy]
python_version = "3.8"
files = ["pixi_build_backend", "tests", "examples"]
strict = true
enable_error_code = ["redundant-expr", "truthy-bool", "ignore-without-code"]
disable_error_code = ["empty-body"]

[[tool.mypy.overrides]]
module = ["pixi_build_backend.pixi_build_backend"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["pixi_build_backend.*"]
# We exclude the pixi_build_backend module from warn_return_any, because the PyO3 api does not have Python
# type annotations. See https://github.com/PyO3/pyo3/issues/1112 for a discussion on adding
# this capability. We could add a stub file for pixi_build_backend.pixi_build_backend (the PyO3 api), but that
# amounts to duplicating almost all type annotations on our api, as the Python api itself is a
# thin wrapper around the PyO3 api to start with.
warn_return_any = false
